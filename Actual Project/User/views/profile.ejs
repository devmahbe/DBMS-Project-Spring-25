<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>User Dashboard</title>
    <link rel="icon" type="image/x-icon" href="/Home Page/assets/images/favicon.ico">

    <link rel="stylesheet" href="/User/CSS/userDashboard.css"/>
    <link rel="stylesheet" href="/User/CSS/formCard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
    <style>
        /* Professional Complaint Cards Styling */
        .complaint-card {
            background: #ffffff;
            border: 1px solid #e8ecf0;
            border-radius: 12px;
            padding: 0;
            margin-bottom: 20px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .complaint-card:hover {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

        .complaint-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 20px 24px 16px;
            border-bottom: 1px solid #f1f3f5;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }

        .complaint-title-section {
            flex: 1;
        }

        .complaint-title {
            margin: 0 0 8px 0;
            color: #2c3e50;
            font-size: 1.1rem;
            font-weight: 600;
            letter-spacing: -0.025em;
        }

        .complaint-type {
            display: inline-block;
            padding: 4px 12px;
            background: #e3f2fd;
            color: #1976d2;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .complaint-actions {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .status-badge {
            padding: 6px 14px;
            border-radius: 20px;
            color: white;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .delete-btn {
            background: linear-gradient(135deg, #ff4757 0%, #ff3742 100%);
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.85rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
            transition: all 0.2s ease;
            box-shadow: 0 2px 6px rgba(255, 71, 87, 0.3);
        }

        .delete-btn:hover {
            background: linear-gradient(135deg, #ff3742 0%, #ff2636 100%);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(255, 71, 87, 0.4);
        }

        .delete-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 6px rgba(255, 71, 87, 0.3);
        }

        .delete-btn:disabled {
            background: #bdc3c7;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .complaint-body {
            padding: 20px 24px 24px;
        }

        .complaint-description {
            margin-bottom: 20px;
        }

        .description-text {
            color: #4a5568;
            font-size: 0.95rem;
            line-height: 1.6;
            margin: 0;
        }

        .complaint-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #6c757d;
            font-size: 0.85rem;
        }

        .meta-item i {
            color: #124E66;
            width: 14px;
        }

        /* Enhanced No Complaints Section */
        .no-complaints {
            text-align: center;
            padding: 60px 20px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
            border-radius: 16px;
            border: 2px dashed #dee2e6;
        }

        .no-complaints-icon {
            font-size: 3rem;
            color: #124E66;
            margin-bottom: 20px;
            opacity: 0.7;
        }

        .no-complaints h3 {
            color: #2c3e50;
            margin: 0 0 12px 0;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .no-complaints p {
            color: #6c757d;
            margin: 0 0 24px 0;
            font-size: 1rem;
        }

        .submit-complaint-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: linear-gradient(135deg, #124E66 0%, #0f3e52 100%);
            color: white;
            text-decoration: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(18, 78, 102, 0.3);
        }

        .submit-complaint-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(18, 78, 102, 0.4);
            text-decoration: none;
            color: white;
        }

        /* Notification Styles */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            display: flex;
            align-items: center;
            gap: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transition: opacity 0.3s ease;
        }

        .notification-success {
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
        }

        .notification-error {
            background: linear-gradient(135deg, #e74c3c 0%, #ff4757 100%);
        }

        .flex-between {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
        }

        .flex-between h2 {
            color: #2c3e50;
            margin: 0;
            font-size: 1.75rem;
            font-weight: 600;
        }

        .flex-between button {
            background: linear-gradient(135deg, #124E66 0%, #0f3e52 100%);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(18, 78, 102, 0.2);
        }

        .flex-between button:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(18, 78, 102, 0.3);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .complaint-header {
                flex-direction: column;
                gap: 16px;
                align-items: flex-start;
            }

            .complaint-actions {
                align-self: flex-end;
            }

            .complaint-meta {
                flex-direction: column;
                gap: 12px;
            }

            .flex-between {
                flex-direction: column;
                gap: 16px;
                align-items: stretch;
            }
        }
    </style>
</head>
<body>

<div class="container">
    <!-- Sidebar -->
    <aside class="sidebar">
        <div class="profile">
            <img id="sidebarImage" src="https://api.dicebear.com/7.x/avataaars/svg?seed=<%= user.username %>" alt="<%= user.username %>" class="avatar" />
            <h2><%= user.fullname || user.username %></h2>
            <p class="email"><%= user.email %></p>
        </div>
        <nav class="nav-links">
            <button class="tab-btn active" data-tab="overview">
                <i class="fas fa-user-circle"></i> Profile Overview
            </button>
            <button class="tab-btn" data-tab="complaints">
                <i class="fas fa-file-alt"></i> My Complaints
            </button>
            <button onclick="location.href='/complain'" class="outline-btn2">
                <i class="fas fa-plus"></i> New Complaint
            </button>
        </nav>

        <div class="bottom-nav">
            <button onclick="location.href='/homepage'" class="outline-btn2">
                <i class="fas fa-home"></i> Home
            </button>
            <button onclick="logoutFunction()" class="danger-btn logout-btn">
                <i class="fas fa-sign-out-alt"></i> Logout
            </button>
        </div>
    </aside>

    <!-- Main Content -->
    <main class="main">
        <header class="header">
            <h1>User Dashboard</h1>
            <button onclick="openEditForm()" class="edit-btn" >Edit Profile</button>
        </header>

        <section id="overview" class="tab-content active">
            <div class="card">
                <h3><i class="fas fa-user-circle" style="margin-right: 10px; color: var(--deep-teal);"></i>
                    Personal Information</h3>
                <div class="grid">
                    <div>
                        <strong><i class="fas fa-user" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Full Name</strong><p><%= user.fullName || 'Not set' %></p>
                        <strong><i class="fas fa-envelope" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Email</strong><p><%= user.email %></p>
                        <strong><i class="fas fa-phone" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Phone</strong><p><%= user.phone || 'Not set' %></p>
                    </div>
                    <div>
                        <strong><i class="fas fa-calendar-alt" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Date of Birth</strong>
                        <p>
                            <% if (user.dob) { %>
                                <%= new Date(user.dob).toDateString().split(' ').slice(0, 4).join(' ') %>
                            <% } else { %>
                                Not set
                            <% } %>
                        </p>
                        <strong><i class="fa-solid fa-cake-candles" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Age</strong><p><%= user.dob ? calculateAge(user.dob) + ' years' : 'Not set' %></p>
                        <strong><i class="fas fa-map-marker-alt" style="margin-right: 8px; color: var(--deep-teal);"></i>
                            Location</strong><p><%= user.location || 'Not set' %></p>
                    </div>
                </div>
            </div>
            <div class="card center">
                <h3>Profile Picture</h3>
                <img id="profileImage" src="https://api.dicebear.com/7.x/avataaars/svg?seed=<%= user.username %>" class="avatar-large" />

                <!-- Hidden file input -->
                <input type="file" id="profileImageInput" accept="image/*" style="display: none" />

                <!-- Label acts as styled button -->
                <label for="profileImageInput" class="outline-btn">Change Profile Picture</label>
            </div>

        </section>

        <!---- MY COMPLAINS SECTION----->

        <section id="complaints" class="tab-content">
            <div class="flex-between">
                <h2>My Complaints</h2>
                <button onclick="location.href='/complain'">
                    <i class="fas fa-plus"></i> New Complaint
                </button>
            </div>

            <div class="complaint-list">
                <div class="no-complaints">
                    <div class="no-complaints-icon">
                        <i class="fas fa-spinner fa-spin"></i>
                    </div>
                    <h3>Loading Complaints...</h3>
                    <p>Please wait while we fetch your complaints.</p>
                </div>
            </div>
        </section>
    </main>
</div>

<!-- Edit Profile Modal -->
<div id="editProfileModal" class="modal-overlay">
    <div class="modal-card">
        <h2>Edit Profile</h2>
        <form id="editProfileForm">
            <label for="editFullName">Full Name</label>
            <input type="text" id="editFullName" value="<%= user.fullName || '' %>" placeholder="Enter full name" required />

            <label for="editEmail">Email</label>
            <input type="email" id="editEmail" value="<%= user.email %>" placeholder="Enter email" readonly class="disabled-input" />

            <label for="editPhone">Phone</label>
            <input type="tel" id="editPhone" value="<%= user.phone || '' %>" placeholder="Enter phone" required />

            <label for="editLocation">Location</label>
            <div class="location-input-wrapper">
                <input type="text" id="editLocation" value="<%= user.location || '' %>" placeholder="Enter location" required />
                <button type="button" class="location-btn" onclick="getLocation()">
                    <i class="fas fa-map-marker-alt"></i>
                </button>
            </div>
            <!-- Add this inside your editProfileForm in profile.ejs -->
            <label for="editDOB">Date of Birth</label>
            <input type="date" id="editDOB" value="<%= user.dob ? new Date(user.dob).toISOString().split('T')[0] : '' %>" />

            <div class="modal-actions">
                <button type="submit" class="primary-btn">Save</button>
                <button id="cancelEditBtn" type="button" class="secondary-btn">Cancel</button>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Profile image handling
        const profileImage = document.getElementById("profileImage");
        const sidebarImage = document.getElementById("sidebarImage");
        const fileInput = document.getElementById("profileImageInput");

        // Load image from localStorage if exists
        const savedImage = localStorage.getItem("profileImage");
        if (savedImage) {
            profileImage.src = savedImage;
            sidebarImage.src = savedImage;
        }

        fileInput.addEventListener("change", function () {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const imageData = e.target.result;
                    profileImage.src = imageData;
                    sidebarImage.src = imageData;
                    localStorage.setItem("profileImage", imageData);
                };
                reader.readAsDataURL(file);
            }
        });
    });

    // Helper function to calculate age from date of birth
    function calculateAge(dob) {
        const birthDate = new Date(dob);
        const today = new Date();
        let age = today.getFullYear() - birthDate.getFullYear();
        const monthDifference = today.getMonth() - birthDate.getMonth();

        if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {
            age--;
        }

        return age;
    }

    // Enhanced logout function with better error handling
    function logoutFunction() {
        if (confirm('Are you sure you want to logout?')) {
            console.log('Attempting to logout...');

            fetch('/logout', {
                method: 'POST',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                console.log('Logout response status:', response.status);

                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
            })
            .then(data => {
                console.log('Logout response:', data);

            if (data.success) {
                // Clear any stored data
                localStorage.removeItem('profileImage');
                // Redirect to login page using the route
                console.log('Redirecting to login page...');
               window.location.href = '/signup';  // Changed from '/signup' to '/login'
            } else {
                console.error('Logout failed:', data.message);
                alert('Logout failed: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Logout error:', error);
            // Even if there's an error, redirect to login
            localStorage.removeItem('profileImage');
          window.location.href = '/signup';  // Changed from '/signup' to '/login'
        });
    }
}
</script>
<script src="/User/Scripts/userProfile.js"></script>
<script src="/User/Scripts/fetchLocation.js"></script>
<script src="/User/Scripts/creds/config.js"></script>
<script src="/User/Scripts/editProfile.js" defer></script>
<script src="/User/Scripts/myComplaints.js" defer></script>

<style>
  .disabled-input {
    background-color: #f0f0f0;
    cursor: not-allowed;
    opacity: 0.7;
  }
</style>
</body>
</html>